{  "shapes": {    "matchName": "ADBE Root Vectors Group",    "type": "INDEXED_GROUP",    "properties": [      {        "matchName": "ADBE Vector Group",        "name": "Limb",        "type": "NAMED_GROUP",        "properties": [          {            "matchName": "ADBE Vectors Group",            "name": "Contents",            "type": "INDEXED_GROUP",            "properties": [              {                "matchName": "ADBE Vector Group",                "name": "Upper Group",                "type": "NAMED_GROUP",                "properties": [                  {                    "matchName": "ADBE Vectors Group",                    "name": "Contents",                    "type": "INDEXED_GROUP",                    "properties": [                      {                        "matchName": "ADBE Vector Group",                        "name": "Group 1",                        "type": "NAMED_GROUP",                        "properties": [                          {                            "matchName": "ADBE Vectors Group",                            "name": "Contents",                            "type": "INDEXED_GROUP",                            "properties": [                              {                                "matchName": "ADBE Vector Shape - Group",                                "name": "Taper Path",                                "type": "NAMED_GROUP",                                "properties": [                                  {                                    "matchName": "ADBE Vector Shape Direction",                                    "name": "Shape Direction",                                    "type": "PROPERTY",                                    "enabled": true,                                    "value": "2"                                  },                                  {                                    "matchName": "ADBE Vector Shape",                                    "name": "Path",                                    "type": "PROPERTY",                                    "enabled": true,                                    "expression": "// lozenge\rfunction midPoint(p1, p2, per) {\r    return [p1[0] + (p2[0] - p1[0]) * per, p1[1] + (p2[1] - p1[1]) * per];\r}\rfunction tangentsAbsolute(vertices, tans) {\r    for (let i = 0, il = vertices.length; i < il; i++) {\r        tans[i] = add(tans[i], vertices[i]);\r    }\r    return tans;\r}\rfunction tangentsRelative(vertices, tans) {\r    for (let i = 0, il = vertices.length; i < il; i++) {\r        tans[i] = sub(tans[i], vertices[i]);\r    }\r    return tans;\r}\rfunction flipX(point) {\r    return [-point[0], point[1]];\r}\r\rfunction flipArrayY (vertices, flipPoint) {\r    for (let i = 0; i < vertices.length; i++) {\r        vertices[i] = [vertices[i][0], flipPoint - (vertices[i][1] - flipPoint)]\r    }\r    return (vertices)\r}\rconst endctrl = thisComp.layer('{{ end }}');\rconst scaleFacs = thisLayer.content('Admin').content('Scaling Factors').transform.scale[0];\rconst dist = endctrl.effect('Pseudo/skl_3bone_data_01')('ikfkfreeksides').value[0]; \rconst circ2 = thisLayer.effect('Taper Redux')('Upper Joint Width') * scaleFacs * 0.5;\rconst circ1 = thisLayer.effect('Taper Redux')('Start Width') * scaleFacs *0.5;\rlet c1, c2;\rif (circ2 < circ1) {\r\tc2 = circ2, c1 = circ1\r\t} else {\r\tc1 = circ2, c2 = circ1\r\t}\rconst A = Math.acos(clamp((c1 - c2) / dist, -1, 1));\rconst fac = 0.5522847498307933;\rconst topSemiVerts = [[c2, -dist], [0, -dist - c2], [-c2, -dist]];\rconst topSemiIns = [[0, 0], [(c2 * fac), 0], [0, -c2 * fac]];\rconst topSemiOuts = [[0, -c2 * fac], [-c2 * fac, 0], [0, 0]];\rconst quad = (0.5 * Math.PI);\rconst t = linear(quad - A, 0, quad, 0, 1);\rconst topSemiInsAbs = tangentsAbsolute(topSemiVerts, topSemiIns);\rconst topSemiOutsAbs = tangentsAbsolute(topSemiVerts, topSemiOuts);\rlet Q0 = midPoint(topSemiVerts[0], topSemiOutsAbs[0], t);\rlet Q1 = midPoint(topSemiOutsAbs[0], topSemiInsAbs[1], t);\rlet Q2 = midPoint(topSemiInsAbs[1], topSemiVerts[1], t);\rlet R0 = midPoint(Q0, Q1, t);\rlet R1 = midPoint(Q1, Q2, t);\rlet S0 = midPoint(R0, R1, t);\rlet newTopSemiVerts = [S0, topSemiVerts[1], [-S0[0], S0[1]]];\rlet newTopSemiIns = tangentsRelative(newTopSemiVerts, [R0, Q2, flipX(R1)]);\rlet newTopSemiOuts = tangentsRelative(newTopSemiVerts, [R1, flipX(Q2), flipX(R0)]);\rconst botSemiVerts = [[c1, 0], [0, -c1], [-c1, 0]];\rconst botSemiIns = [[0, 0], [(c1 * fac), 0], [0, -c1 * fac]];\rconst botSemiOuts = [[0, -c1 * fac], [-c1 * fac, 0], [0, 0]];\rconst remSemiVerts = [[-c1, 0], [0, c1], [c1, 0]];\rconst remSemiIns = tangentsAbsolute(remSemiVerts, [[0, 0], [-(c1 * fac), 0], [0, c1 * fac]]);\rconst remSemiOuts = tangentsAbsolute(remSemiVerts, [[0, c1 * fac], [c1 * fac, 0], [0, 0]]);\rconst botSemiInsAbs = tangentsAbsolute(botSemiVerts, botSemiIns);\rconst botSemiOutsAbs = tangentsAbsolute(botSemiVerts, botSemiOuts);\rQ0 = midPoint(botSemiVerts[0], botSemiOutsAbs[0], t);\rQ1 = midPoint(botSemiOutsAbs[0], botSemiInsAbs[1], t);\rQ2 = midPoint(botSemiInsAbs[1], botSemiVerts[1], t);\rR0 = midPoint(Q0, Q1, t);\rR1 = midPoint(Q1, Q2, t);\rS0 = midPoint(R0, R1, t);\rconst newBotSemiVerts = [flipX(S0), remSemiVerts[0], remSemiVerts[1], remSemiVerts[2], S0]\rconst newBotSemiIns = tangentsRelative(newBotSemiVerts, [flipX(R1), flipX(Q0), remSemiIns[1], remSemiIns[2], R0])\rconst newBotSemiOuts = tangentsRelative(newBotSemiVerts, [flipX(R0), remSemiOuts[0], remSemiOuts[1], Q0, R1])\rnewTopSemiVerts.push(newBotSemiVerts[0], newBotSemiVerts[1], newBotSemiVerts[2], newBotSemiVerts[3], newBotSemiVerts[4]);\rnewTopSemiIns.push(newBotSemiIns[0], newBotSemiIns[1], newBotSemiIns[2], newBotSemiIns[3], newBotSemiIns[4]);\rnewTopSemiOuts.push(newBotSemiOuts[0], newBotSemiOuts[1], newBotSemiOuts[2], newBotSemiOuts[3], newBotSemiOuts[4]);\rlet state;\rif (circ2 < circ1) {\r\tstate = 1;\r\t} else {\r\tstate = 2;\r    newTopSemiVerts = flipArrayY(newTopSemiVerts, -dist * 0.5)\r    newTopSemiIns = flipArrayY(newTopSemiIns, 0)\r    newTopSemiOuts = flipArrayY(newTopSemiOuts, 0)\r}\rcreatePath(newTopSemiVerts, newTopSemiIns, newTopSemiOuts, true)",                                    "value": "{\"closed\":true,\"featherInterps\":[\n\n],\"featherRadii\":[\n\n],\"featherRelCornerAngles\":[\n\n],\"featherRelSegLocs\":[\n\n],\"featherSegLocs\":[\n\n],\"featherTensions\":[\n\n],\"featherTypes\":[\n\n],\"inTangents\":[[0.41445922851562,3.19192504882812],[38.1165008544922,0],[4.77995300292969,-36.8141174316406],[6.37327575683594,-49.0854797363281],[0,-4.40646362304688],[-55.2284698486328,0],[0,55.2284851074219],[0.55258178710938,4.25592041015625]],\"outTangents\":[[-4.77993774414062,-36.8141174316406],[-38.1165008544922,0],[-0.41444396972656,3.19192504882812],[-0.55258178710938,4.25592041015625],[0,55.2284851074219],[55.2284698486328,0],[0,-4.40646362304688],[-6.37327575683594,-49.0854797363281]],\"vertices\":[[74.3717956542969,-209.751708984375],[0,-275],[-74.3718109130859,-209.751708984375],[-99.1624145507812,-13.0022888183594],[-100,0],[0,100],[100,0],[99.1624145507812,-13.0022888183594]]}"                                  }                                ],                                "enabled": true                              },                              {                                "matchName": "ADBE Vector Graphic - Fill",                                "name": "Fill",                                "type": "NAMED_GROUP",                                "properties": [                                  {                                    "matchName": "ADBE Vector Fill Color",                                    "name": "Color",                                    "type": "PROPERTY",                                    "enabled": true,                                    "expression": "thisLayer.effect('Taper Redux')('Upper Color');",                                    "value": "[0.98823529481888,0.8901960849762,0.00784313771874,1]"                                  }                                ],                                "enabled": true                              }                            ],                            "enabled": true                          },                          {                            "matchName": "ADBE Vector Transform Group",                            "name": "Transform",                            "type": "NAMED_GROUP",                            "properties": [                                                          ],                            "enabled": true                          },                          {                            "matchName": "ADBE Vector Materials Group",                            "name": "Material Options",                            "type": "NAMED_GROUP",                            "properties": [                                                          ],                            "enabled": true                          }                        ],                        "enabled": true                      }                    ],                    "enabled": true                  },                  {                    "matchName": "ADBE Vector Transform Group",                    "name": "Transform",                    "type": "NAMED_GROUP",                    "properties": [                      {                        "matchName": "ADBE Vector Position",                        "name": "Position",                        "type": "PROPERTY",                        "enabled": true,                        "expression": "thisComp.layer('{{ end }}')('ADBE Effect Parade')('Pseudo/skl_3bone_data_01')('p0').value",                        "value": "[240,150]"                      },                      {                        "matchName": "ADBE Vector Rotation",                        "name": "Rotation",                        "type": "PROPERTY",                        "enabled": true,                        "expression": "thisComp.layer('{{ end }}')('ADBE Effect Parade')('Pseudo/skl_3bone_data_01')('ikfkfreekangles').value[0]",                        "value": "150.005274472603"                      }                    ],                    "enabled": true                  },                  {                    "matchName": "ADBE Vector Materials Group",                    "name": "Material Options",                    "type": "NAMED_GROUP",                    "properties": [                                          ],                    "enabled": true                  }                ],                "enabled": true              },              {                "matchName": "ADBE Vector Group",                "name": "Middle Group",                "type": "NAMED_GROUP",                "properties": [                  {                    "matchName": "ADBE Vectors Group",                    "name": "Contents",                    "type": "INDEXED_GROUP",                    "properties": [                      {                        "matchName": "ADBE Vector Group",                        "name": "Group 1",                        "type": "NAMED_GROUP",                        "properties": [                          {                            "matchName": "ADBE Vectors Group",                            "name": "Contents",                            "type": "INDEXED_GROUP",                            "properties": [                              {                                "matchName": "ADBE Vector Shape - Group",                                "name": "Taper Path",                                "type": "NAMED_GROUP",                                "properties": [                                  {                                    "matchName": "ADBE Vector Shape Direction",                                    "name": "Shape Direction",                                    "type": "PROPERTY",                                    "enabled": true,                                    "value": "2"                                  },                                  {                                    "matchName": "ADBE Vector Shape",                                    "name": "Path",                                    "type": "PROPERTY",                                    "enabled": true,                                    "expression": "// lozenge\rfunction midPoint(p1, p2, per) {\r    return [p1[0] + (p2[0] - p1[0]) * per, p1[1] + (p2[1] - p1[1]) * per];\r}\rfunction tangentsAbsolute(vertices, tans) {\r    for (let i = 0, il = vertices.length; i < il; i++) {\r        tans[i] = add(tans[i], vertices[i]);\r    }\r    return tans;\r}\rfunction tangentsRelative(vertices, tans) {\r    for (let i = 0, il = vertices.length; i < il; i++) {\r        tans[i] = sub(tans[i], vertices[i]);\r    }\r    return tans;\r}\rfunction flipX(point) {\r    return [-point[0], point[1]];\r}\r\rfunction flipArrayY (vertices, flipPoint) {\r    for (let i = 0; i < vertices.length; i++) {\r        vertices[i] = [vertices[i][0], flipPoint - (vertices[i][1] - flipPoint)]\r    }\r    return (vertices)\r}\rconst endctrl = thisComp.layer('{{ end }}');\rconst scaleFacs = thisLayer.content('Admin').content('Scaling Factors').transform.scale[0];\rconst dist = endctrl.effect('Pseudo/skl_3bone_data_01')('ikfkfreeksides').value[1]; \rconst circ2 = thisLayer.effect('Taper Redux')('Lower Joint Width') * scaleFacs * 0.5;\rconst circ1 = thisLayer.effect('Taper Redux')('Upper Joint Width') * scaleFacs *0.5;\rlet c1, c2;\rif (circ2 < circ1) {\r\tc2 = circ2, c1 = circ1\r\t} else {\r\tc1 = circ2, c2 = circ1\r\t}\rconst A = Math.acos(clamp((c1 - c2) / dist, -1, 1));\rconst fac = 0.5522847498307933;\rconst topSemiVerts = [[c2, -dist], [0, -dist - c2], [-c2, -dist]];\rconst topSemiIns = [[0, 0], [(c2 * fac), 0], [0, -c2 * fac]];\rconst topSemiOuts = [[0, -c2 * fac], [-c2 * fac, 0], [0, 0]];\rconst quad = (0.5 * Math.PI);\rconst t = linear(quad - A, 0, quad, 0, 1);\rconst topSemiInsAbs = tangentsAbsolute(topSemiVerts, topSemiIns);\rconst topSemiOutsAbs = tangentsAbsolute(topSemiVerts, topSemiOuts);\rlet Q0 = midPoint(topSemiVerts[0], topSemiOutsAbs[0], t);\rlet Q1 = midPoint(topSemiOutsAbs[0], topSemiInsAbs[1], t);\rlet Q2 = midPoint(topSemiInsAbs[1], topSemiVerts[1], t);\rlet R0 = midPoint(Q0, Q1, t);\rlet R1 = midPoint(Q1, Q2, t);\rlet S0 = midPoint(R0, R1, t);\rlet newTopSemiVerts = [S0, topSemiVerts[1], [-S0[0], S0[1]]];\rlet newTopSemiIns = tangentsRelative(newTopSemiVerts, [R0, Q2, flipX(R1)]);\rlet newTopSemiOuts = tangentsRelative(newTopSemiVerts, [R1, flipX(Q2), flipX(R0)]);\rconst botSemiVerts = [[c1, 0], [0, -c1], [-c1, 0]];\rconst botSemiIns = [[0, 0], [(c1 * fac), 0], [0, -c1 * fac]];\rconst botSemiOuts = [[0, -c1 * fac], [-c1 * fac, 0], [0, 0]];\rconst remSemiVerts = [[-c1, 0], [0, c1], [c1, 0]];\rconst remSemiIns = tangentsAbsolute(remSemiVerts, [[0, 0], [-(c1 * fac), 0], [0, c1 * fac]]);\rconst remSemiOuts = tangentsAbsolute(remSemiVerts, [[0, c1 * fac], [c1 * fac, 0], [0, 0]]);\rconst botSemiInsAbs = tangentsAbsolute(botSemiVerts, botSemiIns);\rconst botSemiOutsAbs = tangentsAbsolute(botSemiVerts, botSemiOuts);\rQ0 = midPoint(botSemiVerts[0], botSemiOutsAbs[0], t);\rQ1 = midPoint(botSemiOutsAbs[0], botSemiInsAbs[1], t);\rQ2 = midPoint(botSemiInsAbs[1], botSemiVerts[1], t);\rR0 = midPoint(Q0, Q1, t);\rR1 = midPoint(Q1, Q2, t);\rS0 = midPoint(R0, R1, t);\rconst newBotSemiVerts = [flipX(S0), remSemiVerts[0], remSemiVerts[1], remSemiVerts[2], S0]\rconst newBotSemiIns = tangentsRelative(newBotSemiVerts, [flipX(R1), flipX(Q0), remSemiIns[1], remSemiIns[2], R0])\rconst newBotSemiOuts = tangentsRelative(newBotSemiVerts, [flipX(R0), remSemiOuts[0], remSemiOuts[1], Q0, R1])\rnewTopSemiVerts.push(newBotSemiVerts[0], newBotSemiVerts[1], newBotSemiVerts[2], newBotSemiVerts[3], newBotSemiVerts[4]);\rnewTopSemiIns.push(newBotSemiIns[0], newBotSemiIns[1], newBotSemiIns[2], newBotSemiIns[3], newBotSemiIns[4]);\rnewTopSemiOuts.push(newBotSemiOuts[0], newBotSemiOuts[1], newBotSemiOuts[2], newBotSemiOuts[3], newBotSemiOuts[4]);\rlet state;\rif (circ2 < circ1) {\r\tstate = 1;\r\t} else {\r\tstate = 2;\r    newTopSemiVerts = flipArrayY(newTopSemiVerts, -dist * 0.5)\r    newTopSemiIns = flipArrayY(newTopSemiIns, 0)\r    newTopSemiOuts = flipArrayY(newTopSemiOuts, 0)\r}\rcreatePath(newTopSemiVerts, newTopSemiIns, newTopSemiOuts, true)",                                    "value": "{\"closed\":true,\"featherInterps\":[\n\n],\"featherRadii\":[\n\n],\"featherRelCornerAngles\":[\n\n],\"featherRelSegLocs\":[\n\n],\"featherSegLocs\":[\n\n],\"featherTensions\":[\n\n],\"featherTypes\":[\n\n],\"inTangents\":[[0.35981750488281,2.41989135742188],[25.0942230224609,0],[3.58303833007812,-24.0971984863281],[5.37457275390625,-36.1457824707031],[0,-3.78004455566406],[-41.4213562011719,0],[0,41.4213562011719],[0.53973388671875,3.62983703613281]],\"outTangents\":[[-3.58305358886719,-24.0971984863281],[-25.0942230224609,0],[-0.35981750488281,2.41989135742188],[-0.53973388671875,3.62983703613281],[0,41.4213562011719],[41.4213562011719,0],[0,-3.78004455566406],[-5.37457275390625,-36.1457824707031]],\"vertices\":[[49.4537506103516,-182.416381835938],[0,-225],[-49.4537506103516,-182.416381835938],[-74.1806335449219,-11.1245727539062],[-75,0],[0,75],[75,0],[74.1806335449219,-11.1245727539062]]}"                                  }                                ],                                "enabled": true                              },                              {                                "matchName": "ADBE Vector Graphic - Fill",                                "name": "Fill",                                "type": "NAMED_GROUP",                                "properties": [                                  {                                    "matchName": "ADBE Vector Fill Color",                                    "name": "Color",                                    "type": "PROPERTY",                                    "enabled": true,                                    "expression": "thisLayer.effect('Taper Redux')('Middle Color');",                                    "value": "[0.98823529481888,0.8901960849762,0.00784313771874,1]"                                  }                                ],                                "enabled": true                              }                            ],                            "enabled": true                          },                          {                            "matchName": "ADBE Vector Transform Group",                            "name": "Transform",                            "type": "NAMED_GROUP",                            "properties": [                                                          ],                            "enabled": true                          },                          {                            "matchName": "ADBE Vector Materials Group",                            "name": "Material Options",                            "type": "NAMED_GROUP",                            "properties": [                                                          ],                            "enabled": true                          }                        ],                        "enabled": true                      }                    ],                    "enabled": true                  },                  {                    "matchName": "ADBE Vector Transform Group",                    "name": "Transform",                    "type": "NAMED_GROUP",                    "properties": [                      {                        "matchName": "ADBE Vector Position",                        "name": "Position",                        "type": "PROPERTY",                        "enabled": true,                        "expression": "thisComp.layer('{{ end }}')('ADBE Effect Parade')('Pseudo/skl_3bone_data_01')('p1ikfkfreek').value",                        "value": "[339.98405485121,323.214285714286]"                      },                      {                        "matchName": "ADBE Vector Rotation",                        "name": "Rotation",                        "type": "PROPERTY",                        "enabled": true,                        "expression": "thisComp.layer('{{ end }}')('ADBE Effect Parade')('Pseudo/skl_3bone_data_01')('ikfkfreekangles').value[1]",                        "value": "-88.9768066963138"                      }                    ],                    "enabled": true                  },                  {                    "matchName": "ADBE Vector Materials Group",                    "name": "Material Options",                    "type": "NAMED_GROUP",                    "properties": [                                          ],                    "enabled": true                  }                ],                "enabled": true              },              {                "matchName": "ADBE Vector Group",                "name": "Lower Group",                "type": "NAMED_GROUP",                "properties": [                  {                    "matchName": "ADBE Vectors Group",                    "name": "Contents",                    "type": "INDEXED_GROUP",                    "properties": [                      {                        "matchName": "ADBE Vector Group",                        "name": "Group 1",                        "type": "NAMED_GROUP",                        "properties": [                          {                            "matchName": "ADBE Vectors Group",                            "name": "Contents",                            "type": "INDEXED_GROUP",                            "properties": [                              {                                "matchName": "ADBE Vector Shape - Group",                                "name": "Taper Path",                                "type": "NAMED_GROUP",                                "properties": [                                  {                                    "matchName": "ADBE Vector Shape Direction",                                    "name": "Shape Direction",                                    "type": "PROPERTY",                                    "enabled": true,                                    "value": "2"                                  },                                  {                                    "matchName": "ADBE Vector Shape",                                    "name": "Path",                                    "type": "PROPERTY",                                    "enabled": true,                                    "expression": "// lozenge\rfunction midPoint(p1, p2, per) {\r    return [p1[0] + (p2[0] - p1[0]) * per, p1[1] + (p2[1] - p1[1]) * per];\r}\rfunction tangentsAbsolute(vertices, tans) {\r    for (let i = 0, il = vertices.length; i < il; i++) {\r        tans[i] = add(tans[i], vertices[i]);\r    }\r    return tans;\r}\rfunction tangentsRelative(vertices, tans) {\r    for (let i = 0, il = vertices.length; i < il; i++) {\r        tans[i] = sub(tans[i], vertices[i]);\r    }\r    return tans;\r}\rfunction flipX(point) {\r    return [-point[0], point[1]];\r}\r\rfunction flipArrayY (vertices, flipPoint) {\r    for (let i = 0; i < vertices.length; i++) {\r        vertices[i] = [vertices[i][0], flipPoint - (vertices[i][1] - flipPoint)]\r    }\r    return (vertices)\r}\rconst endctrl = thisComp.layer('{{ end }}');\rconst scaleFacs = thisLayer.content('Admin').content('Scaling Factors').transform.scale[0];\rconst dist = endctrl.effect('Pseudo/skl_3bone_data_01')('ikfkfreeksides').value[2]; \rconst circ2 = thisLayer.effect('Taper Redux')('End Width') * scaleFacs * 0.5;\rconst circ1 = thisLayer.effect('Taper Redux')('Lower Joint Width') * scaleFacs *0.5;\rlet c1, c2;\rif (circ2 < circ1) {\r\tc2 = circ2, c1 = circ1\r\t} else {\r\tc1 = circ2, c2 = circ1\r\t}\rconst A = Math.acos(clamp((c1 - c2) / dist, -1, 1));\rconst fac = 0.5522847498307933;\rconst topSemiVerts = [[c2, -dist], [0, -dist - c2], [-c2, -dist]];\rconst topSemiIns = [[0, 0], [(c2 * fac), 0], [0, -c2 * fac]];\rconst topSemiOuts = [[0, -c2 * fac], [-c2 * fac, 0], [0, 0]];\rconst quad = (0.5 * Math.PI);\rconst t = linear(quad - A, 0, quad, 0, 1);\rconst topSemiInsAbs = tangentsAbsolute(topSemiVerts, topSemiIns);\rconst topSemiOutsAbs = tangentsAbsolute(topSemiVerts, topSemiOuts);\rlet Q0 = midPoint(topSemiVerts[0], topSemiOutsAbs[0], t);\rlet Q1 = midPoint(topSemiOutsAbs[0], topSemiInsAbs[1], t);\rlet Q2 = midPoint(topSemiInsAbs[1], topSemiVerts[1], t);\rlet R0 = midPoint(Q0, Q1, t);\rlet R1 = midPoint(Q1, Q2, t);\rlet S0 = midPoint(R0, R1, t);\rlet newTopSemiVerts = [S0, topSemiVerts[1], [-S0[0], S0[1]]];\rlet newTopSemiIns = tangentsRelative(newTopSemiVerts, [R0, Q2, flipX(R1)]);\rlet newTopSemiOuts = tangentsRelative(newTopSemiVerts, [R1, flipX(Q2), flipX(R0)]);\rconst botSemiVerts = [[c1, 0], [0, -c1], [-c1, 0]];\rconst botSemiIns = [[0, 0], [(c1 * fac), 0], [0, -c1 * fac]];\rconst botSemiOuts = [[0, -c1 * fac], [-c1 * fac, 0], [0, 0]];\rconst remSemiVerts = [[-c1, 0], [0, c1], [c1, 0]];\rconst remSemiIns = tangentsAbsolute(remSemiVerts, [[0, 0], [-(c1 * fac), 0], [0, c1 * fac]]);\rconst remSemiOuts = tangentsAbsolute(remSemiVerts, [[0, c1 * fac], [c1 * fac, 0], [0, 0]]);\rconst botSemiInsAbs = tangentsAbsolute(botSemiVerts, botSemiIns);\rconst botSemiOutsAbs = tangentsAbsolute(botSemiVerts, botSemiOuts);\rQ0 = midPoint(botSemiVerts[0], botSemiOutsAbs[0], t);\rQ1 = midPoint(botSemiOutsAbs[0], botSemiInsAbs[1], t);\rQ2 = midPoint(botSemiInsAbs[1], botSemiVerts[1], t);\rR0 = midPoint(Q0, Q1, t);\rR1 = midPoint(Q1, Q2, t);\rS0 = midPoint(R0, R1, t);\rconst newBotSemiVerts = [flipX(S0), remSemiVerts[0], remSemiVerts[1], remSemiVerts[2], S0]\rconst newBotSemiIns = tangentsRelative(newBotSemiVerts, [flipX(R1), flipX(Q0), remSemiIns[1], remSemiIns[2], R0])\rconst newBotSemiOuts = tangentsRelative(newBotSemiVerts, [flipX(R0), remSemiOuts[0], remSemiOuts[1], Q0, R1])\rnewTopSemiVerts.push(newBotSemiVerts[0], newBotSemiVerts[1], newBotSemiVerts[2], newBotSemiVerts[3], newBotSemiVerts[4]);\rnewTopSemiIns.push(newBotSemiIns[0], newBotSemiIns[1], newBotSemiIns[2], newBotSemiIns[3], newBotSemiIns[4]);\rnewTopSemiOuts.push(newBotSemiOuts[0], newBotSemiOuts[1], newBotSemiOuts[2], newBotSemiOuts[3], newBotSemiOuts[4]);\rlet state;\rif (circ2 < circ1) {\r\tstate = 1;\r\t} else {\r\tstate = 2;\r    newTopSemiVerts = flipArrayY(newTopSemiVerts, -dist * 0.5)\r    newTopSemiIns = flipArrayY(newTopSemiIns, 0)\r    newTopSemiOuts = flipArrayY(newTopSemiOuts, 0)\r}\rcreatePath(newTopSemiVerts, newTopSemiIns, newTopSemiOuts, true)",                                    "value": "{\"closed\":true,\"featherInterps\":[\n\n],\"featherRadii\":[\n\n],\"featherRelCornerAngles\":[\n\n],\"featherRelSegLocs\":[\n\n],\"featherSegLocs\":[\n\n],\"featherTensions\":[\n\n],\"featherTypes\":[\n\n],\"inTangents\":[[0.12432861328125,1.19976806640625],[18.0973205566406,0],[1.82534790039062,-17.6145935058594],[2.60763549804688,-25.1636962890625],[0,-1.76092529296875],[-27.6142425537109,0],[0,27.6142425537109],[0.1776123046875,1.71394348144531]],\"outTangents\":[[-1.82534790039062,-17.6145935058594],[-18.0973205566406,0],[-0.12432861328125,1.19976806640625],[-0.1776123046875,1.71394348144531],[0,27.6142425537109],[27.6142425537109,0],[0,-1.76092529296875],[-2.60763549804688,-25.1636962890625]],\"vertices\":[[34.8119506835938,-153.650177001953],[0,-185],[-34.8119506835938,-153.650177001953],[-49.7313537597656,-5.21452331542969],[-50,0],[0,50],[50,0],[49.7313537597656,-5.21452331542969]]}"                                  }                                ],                                "enabled": true                              },                              {                                "matchName": "ADBE Vector Graphic - Fill",                                "name": "Fill",                                "type": "NAMED_GROUP",                                "properties": [                                  {                                    "matchName": "ADBE Vector Fill Color",                                    "name": "Color",                                    "type": "PROPERTY",                                    "enabled": true,                                    "expression": "thisLayer.effect('Taper Redux')('Lower Color');",                                    "value": "[0.98823529481888,0.8901960849762,0.00784313771874,1]"                                  }                                ],                                "enabled": true                              }                            ],                            "enabled": true                          },                          {                            "matchName": "ADBE Vector Transform Group",                            "name": "Transform",                            "type": "NAMED_GROUP",                            "properties": [                                                          ],                            "enabled": true                          },                          {                            "matchName": "ADBE Vector Materials Group",                            "name": "Material Options",                            "type": "NAMED_GROUP",                            "properties": [                                                          ],                            "enabled": true                          }                        ],                        "enabled": true                      }                    ],                    "enabled": true                  },                  {                    "matchName": "ADBE Vector Transform Group",                    "name": "Transform",                    "type": "NAMED_GROUP",                    "properties": [                      {                        "matchName": "ADBE Vector Position",                        "name": "Position",                        "type": "PROPERTY",                        "enabled": true,                        "expression": "thisComp.layer('{{ end }}')('ADBE Effect Parade')('Pseudo/skl_3bone_data_01')('p2ikfkfreek').value",                        "value": "[165.011958861592,320.089285714286]"                      },                      {                        "matchName": "ADBE Vector Rotation",                        "name": "Rotation",                        "type": "PROPERTY",                        "enabled": true,                        "expression": "thisComp.layer('{{ end }}')('ADBE Effect Parade')('Pseudo/skl_3bone_data_01')('ikfkfreekangles').value[2]",                        "value": "150.005274472603"                      }                    ],                    "enabled": true                  },                  {                    "matchName": "ADBE Vector Materials Group",                    "name": "Material Options",                    "type": "NAMED_GROUP",                    "properties": [                                          ],                    "enabled": true                  }                ],                "enabled": true              }            ],            "enabled": true          },          {            "matchName": "ADBE Vector Transform Group",            "name": "Transform",            "type": "NAMED_GROUP",            "properties": [                          ],            "enabled": true          },          {            "matchName": "ADBE Vector Materials Group",            "name": "Material Options",            "type": "NAMED_GROUP",            "properties": [                          ],            "enabled": true          }        ],        "enabled": true      },      {        "matchName": "ADBE Vector Group",        "name": "Admin",        "type": "NAMED_GROUP",        "properties": [          {            "matchName": "ADBE Vectors Group",            "name": "Contents",            "type": "INDEXED_GROUP",            "properties": [              {                "matchName": "ADBE Vector Group",                "name": "Scaling Factors",                "type": "NAMED_GROUP",                "properties": [                  {                    "matchName": "ADBE Vectors Group",                    "name": "Contents",                    "type": "INDEXED_GROUP",                    "properties": [                                          ],                    "enabled": true                  },                  {                    "matchName": "ADBE Vector Transform Group",                    "name": "Transform",                    "type": "NAMED_GROUP",                    "properties": [                      {                        "matchName": "ADBE Vector Scale",                        "name": "Scale",                        "type": "PROPERTY",                        "enabled": true,                        "expression": "[thisComp.layer('{{ end }}').effect('Pseudo/skl_3bone_data_01')('scaleFactor').value[0] * thisComp.layer('{{ end }}').effect('Limber')('Width Scale') * 0.01, 0]",                        "value": "[1,0]"                      }                    ],                    "enabled": true                  },                  {                    "matchName": "ADBE Vector Materials Group",                    "name": "Material Options",                    "type": "NAMED_GROUP",                    "properties": [                                          ],                    "enabled": true                  }                ],                "enabled": true              }            ],            "enabled": true          },          {            "matchName": "ADBE Vector Transform Group",            "name": "Transform",            "type": "NAMED_GROUP",            "properties": [              {                "matchName": "ADBE Vector Scale",                "name": "Scale",                "type": "PROPERTY",                "enabled": true,                "expression": "////// LIMBER 2.0 //////\nvar limbLayers = {\nhip: thisComp.layer('{{ start }}'),\nankle: thisComp.layer('{{ end }}'),\nleg: thisComp.layer('{{ limb }}')\n};value;",                "value": "[100,100]"              }            ],            "enabled": true          },          {            "matchName": "ADBE Vector Materials Group",            "name": "Material Options",            "type": "NAMED_GROUP",            "properties": [                          ],            "enabled": true          }        ],        "enabled": false      }    ]  },  "effects": {    "matchName": "ADBE Effect Parade",    "type": "INDEXED_GROUP",    "properties": [      {        "matchName": "Pseudo/skl_limb_taperRed3b_01",        "name": "Taper Redux",        "type": "NAMED_GROUP",        "properties": [          {            "matchName": "Pseudo/skl_limb_taperRed3b_01-0001",            "name": "Widths",            "type": "PROPERTY",            "enabled": true          },          {            "matchName": "Pseudo/skl_limb_taperRed3b_01-0006",            "name": "Taper Redux 3-bone",            "type": "PROPERTY",            "enabled": true          },          {            "matchName": "Pseudo/skl_limb_taperRed3b_01-0007",            "name": "Colors",            "type": "PROPERTY",            "enabled": true          },          {            "matchName": "Pseudo/skl_limb_taperRed3b_01-0008",            "name": "Upper Color",            "type": "PROPERTY",            "enabled": true,            "expression": "",            "value": "[0.98823529481888,0.8901960849762,0.00784313771874,1]"          },          {            "matchName": "Pseudo/skl_limb_taperRed3b_01-0009",            "name": "Middle Color",            "type": "PROPERTY",            "enabled": true,            "expression": "",            "value": "[0.98823529481888,0.8901960849762,0.00784313771874,1]"          },          {            "matchName": "Pseudo/skl_limb_taperRed3b_01-0010",            "name": "Lower Color",            "type": "PROPERTY",            "enabled": true,            "expression": "",            "value": "[0.98823529481888,0.8901960849762,0.00784313771874,1]"          },          {            "matchName": "Pseudo/skl_limb_taperRed3b_01-0011",            "name": "Taper Redux 3-bone",            "type": "PROPERTY",            "enabled": true          },          {            "matchName": "ADBE Effect Built In Params",            "name": "Compositing Options",            "type": "NAMED_GROUP",            "properties": [              {                "matchName": "ADBE Effect Mask Parade",                "name": "Masks",                "type": "INDEXED_GROUP",                "properties": [                                  ],                "enabled": true              }            ],            "enabled": true          }        ],        "enabled": true      }    ]  },  "transform": {    "matchName": "ADBE Transform Group",    "type": "INDEXED_GROUP",    "properties": [      {        "matchName": "ADBE Anchor Point",        "name": "Anchor Point",        "type": "PROPERTY",        "enabled": true,        "expression": "[0,0];",        "value": "[0,0,0]"      },      {        "matchName": "ADBE Position",        "name": "Position",        "type": "PROPERTY",        "enabled": true,        "expression": "let val = [0, 0];\rif (thisLayer.hasParent) {\r\tval = thisLayer.parent.fromWorld([0, 0, 0])\r\t};\r[val[0], val[1], 0];",        "value": "[0,0,0]"      },      {        "matchName": "ADBE Position_0",        "name": "X Position",        "type": "PROPERTY",        "enabled": true,        "value": "0"      },      {        "matchName": "ADBE Position_1",        "name": "Y Position",        "type": "PROPERTY",        "enabled": true,        "value": "0"      },      {        "matchName": "ADBE Scale",        "name": "Scale",        "type": "PROPERTY",        "enabled": true,        "expression": "let val = [100, 100]\rif (thisLayer.hasParent) {\r    const ctrlScaleFactor = Math.max(length(thisLayer.toComp([0,0]), thisLayer.toComp([0.7071,0.7071])), 0.0001);\r    val = [value[0] / ctrlScaleFactor, value[1] / ctrlScaleFactor]\r}\rval",        "value": "[100,100,100]"      },      {        "matchName": "ADBE Rotate Z",        "name": "Rotation",        "type": "PROPERTY",        "enabled": true,        "expression": "let val = 0;\rif (thisLayer.hasParent) {\r    const vec = thisLayer.parent.toWorldVec([1, 0, 0]);\r    val = -radiansToDegrees(Math.atan2(vec[1], vec[0]))\r}\rval",        "value": "0"      }    ]  }}